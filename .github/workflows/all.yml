name: Compile
on:
  pull_request: {}
  push:
    tags:
    - '*'
jobs:

  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        os: [windows-latest]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.3

    - name: Get CMake
      uses: lukka/get-cmake@latest

    - name: Build Windows (Release)
      run: |
        mkdir build
        cmake . -DCMAKE_BUILD_TYPE=Release -Bbuild
        cd build
        msbuild ChucKDesignerCHOP.sln /property:Configuration=Release

    - name: Make distribution
      run: |
        mkdir chuckdesigner_dist
        move ${{ github.workspace }}/Plugins/ChucK*.dll chuckdesigner_dist
        tar.exe -c -f ${{ matrix.os }}.zip chuckdesigner_dist

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: my-artifact-${{ matrix.os }}
        path: ${{ matrix.os }}.zip

  build-macos:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-10.15, macos-11]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Get CMake
      uses: lukka/get-cmake@latest

    - name: Some Setup
      run: |
        cd thirdparty/chuck/src/core
        bison -dv -b chuck chuck.y
        flex -ochuck.yy.c chuck.lex

    - name: Build MacOS (Release)
      run: |
        mkdir build
        cd build
        cmake .. -G "Xcode"
        xcodebuild -configuration Release -project ChucKDesignerCHOP.xcodeproj
        ls -r *

    - name: Make distribution
      run: |
        mkdir chuckdesigner_dist
        cp ${{ github.workspace }}/build/Release/libChucKDesignerShared.dylib chuckdesigner_dist
        mv ${{ github.workspace }}/build/Release/ChucKDesignerCHOP.plugin chuckdesigner_dist
        mv ${{ github.workspace }}/build/Release/ChucKListenerCHOP.plugin chuckdesigner_dist
        zip -r ${{ matrix.os }}.zip chuckdesigner_dist

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: my-artifact-${{ matrix.os }}
        path: ${{ matrix.os }}.zip

  create-release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest
    name: "Create Release on GitHub"
    steps:
      - uses: actions/download-artifact@v2
        with:
          path: "dist"

      - uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true
