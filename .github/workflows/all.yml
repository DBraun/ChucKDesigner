name: Compile
on:
  pull_request: {}
  push:
    tags:
    - '*'
jobs:

  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.3

    - name: Get CMake
      uses: lukka/get-cmake@latest

    - name: Build Windows (Release)
      run: |
        mkdir build
        cmake . -DCMAKE_BUILD_TYPE=Release -Bbuild
        cd build
        msbuild ChucKDesignerCHOP.sln /property:Configuration=Release

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: my-artifact-windows
        path: ${{ github.workspace }}/Plugins/ChucK*.dll

  build-macos:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-10.15, macos-latest]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Get CMake
      uses: lukka/get-cmake@latest

    - name: Some Setup
      run: |
        cd thirdparty/chuck/src/core
        bison -dv -b chuck chuck.y
        flex -ochuck.yy.c chuck.lex

    - name: Build MacOS (Release)
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        cmake --build . --config Release
        ls -r *
        mv libChucKDesignerCHOP.so ChucKDesignerCHOP.plugin
        mv libChucKListenerCHOP.so ChucKListenerCHOP.plugin

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: my-artifact-macos
        path: |
          ${{ github.workspace }}/build/libChucKDesignerShared.dylib
          ${{ github.workspace }}/build/ChucKDesignerCHOP.plugin
          ${{ github.workspace }}/build/ChucKListenerCHOP.plugin

  create-release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest
    name: "Create Release on GitHub"
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: my-artifact-macos
          path: "dist/macos"

      - uses: actions/download-artifact@v2
        with:
          name: my-artifact-windows
          path: "dist/windows"

      - uses: ncipollo/release-action@v1
        with:
          artifacts: "dist"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true
